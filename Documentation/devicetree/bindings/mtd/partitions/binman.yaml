# SPDX-License-Identifier: (GPL-2.0 OR BSD-2-Clause)
# Copyright 2023 Google LLC

%YAML 1.2
---
$id: http://devicetree.org/schemas/mtd/partitions/binman.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Binman firmware layout

maintainers:
  - Simon Glass <sjg@chromium.org>

description: |
  The binman node provides a layout for firmware, used when packaging firmware
  from multiple projects. It is based on fixed-partitions, with some
  extensions, but uses 'compatible' to indicate the contents of the node, to
  avoid perturbing or confusing existing installations which use 'label' for a
  particular purpose.

  Binman supports properties used as inputs to the firmware-packaging process,
  such as those which control alignment of partitions. This binding addresses
  these 'input' properties. For example, it is common for the 'reg' property
  (an 'output' property) to be set by Binman, based on the alignment requested
  in the input.

  Once processing is complete, input properties have mostly served their
  purpose, at least until the firmware is repacked later, e.g. due to a
  firmware update. The 'fixed-partitions' binding should provide enough
  information to read the firmware at runtime, including decompression if
  needed.

  Documentation for Binman is available at:

  https://u-boot.readthedocs.io/en/latest/develop/package/binman.html

  with the current image-description format at:

  https://u-boot.readthedocs.io/en/latest/develop/package/binman.html#image-description-format

properties:
  compatible:
    const: binman

  "#address-cells":
    const: 1

  "#size-cells":
    const: 1

patternProperties:
  "^partition(-.+|@[0-9a-f]+)$":
    $ref: partition.yaml

additionalProperties: false

examples:
  - |
    partitions {
        compatible = "binman";
        #address-cells = <1>;
        #size-cells = <1>;

        partition@100000 {
            label = "u-boot";
            reg = <0x100000 0xf00000>;
        };
    };
